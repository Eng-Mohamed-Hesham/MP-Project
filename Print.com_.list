EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
Print.com_ -- emu8086 assembler version: 4.05  
 
[ 12/24/2022  --  1:38:56 AM ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       include emu8086.inc
[   2]        :                                       ORG 100h
[   3]        :                                       
[   4]    0100: EB 3A                                 .data
[   5]    0102: 0A 00 0D 00 74 68 65 20 73 74 75 64   print1 dw 0AH, 0DH,'the student id => $'
                65 6E 74 20 69 64 20 3D 3E 20 24 00 
                                                    
[   6]    011A: 0A 00 0D 00 68 69 73 20 67 72 61 64   print2 dw 0AH, 0DH,'his grade => $'
                65 20 3D 3E 20 24                   
[   7]    012C: 05                                    num_of_students db 5
[   8]    012D: 01 00 20 02 02 20 03 00 20 04 02 20   grades db 1, 0, ' ', 2, 2, ' ',  3, 0,' ', 4, 2,' ', 0, 0, ' '
                00 00 20                            
[   9]    013C:                                       .CODE
[  10]    013C: 8C C8                                 mov ax, @data
[  11]    013E: 8E D8                                 mov ds, ax
[  12]    0140:                                       main proc
[  13]        :                                       
[  14]    0140: BF 55 00                              MOV di, 85   ; set the loop iterations
[  15]    0143: BE 2D 01                              LEA SI, grades        ; load addres of the array of students   ;should be in ASCII
[  16]    0146: B9 01 00                              mov cx, 1
[  17]        :                                       
[  18]        :                                       
[  19]    0149:                                       next_value:
[  20]    0149: 8A 14                                 MOV DL, [SI]
[  21]    014B: 8A 74 01                              MOV DH, [SI+1]
[  22]    014E: 83 FA 00                              CMP DX, 0
[  23]    0151: 75 03 E9 86 00                        JE continue
[  24]    0156: 50 56 EB 13 74 68 65 20 73 74 75 64   print "the student id => "
                65 6E 74 20 69 64 20 3D 3E 20 00 BE 
                5A 01 2E 8A 04 3C 00 74 07 46 B4 0E 
                CD 10 EB F2 5E 58                   
[  25]    0180: 8B D1                                 mov dx, cx
[  26]    0182: 83 C2 30                              add dx, 48
[  27]    0185: B4 02                                 mov AH, 2
[  28]    0187: CD 21                                 int 21h
[  29]    0189: 50 56 EB 0F 20 68 69 73 20 67 72 61   print " his grade => "
                64 65 20 3D 3E 20 00 BE 8D 01 2E 8A 
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58                               
[  30]    01AF: 8B 14                                 MOV dx,[SI]
[  31]    01B1: 83 C2 30                              add dx, 48               ; get value from the array
[  32]    01B4: B4 02                                 mov AH, 02h
[  33]    01B6: CD 21                                 int 21h
[  34]    01B8: 8B 54 01                              MOV dx,[SI+1]
[  35]    01BB: 83 C2 30                              add dx, 48               ; get value from the array
[  36]    01BE: B4 02                                 mov AH, 02h
[  37]    01C0: CD 21                                 int 21h                        ;print it   what SI point to
[  38]    01C2: 50 56 EB 03 0D 0A 00 BE C6 01 2E 8A   PRINTN ""
                04 3C 00 74 07 46 B4 0E CD 10 EB F2 
                5E 58                               
[  39]    01DC:                                       continue:
[  40]    01DC: 4F                                    dec di
[  41]    01DD: 41                                    inc cx
[  42]    01DE: 83 C6 03                              add si, 3
[  43]    01E1: 83 FF 00                              cmp di, 0
[  44]        :                                       ; next word
[  45]    01E4: 74 03 E9 60 FF                        JNZ next_value             ; CX++
[  46]    01E9: B4 4C                                 mov ah, 4ch
[  47]    01EB: CD 21                                 int 21h
[  48]        :                                       
[  49]        :                                       main ENDP           ; End of the procedure
[  50]        :                                       
[  51]        :                                       
 
===================================================================================================
 




===================================================================================================
